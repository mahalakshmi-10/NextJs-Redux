webpackHotUpdate_N_E("pages/_app",{

/***/ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
false,

/***/ "./states/announcement/action.tsx":
/*!****************************************!*\
  !*** ./states/announcement/action.tsx ***!
  \****************************************/
/*! exports provided: UPDATE_ANNOUNCEMENT, updateAnnouncement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UPDATE_ANNOUNCEMENT\", function() { return UPDATE_ANNOUNCEMENT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateAnnouncement\", function() { return updateAnnouncement; });\nvar UPDATE_ANNOUNCEMENT = '[Announcement] update'; // let store = createStore(quotes, initialState, applyMiddleware(httpMiddleware));\n// export const updateAnnouncement = async(message: string) => (dispatch) => {\n//   console.log('message :>> ', message);\n//   return dispatch({ type: UPDATE_ANNOUNCEMENT, message })\n// }\n// Action Creators\n\nfunction updateAnnouncement(message) {\n  return {\n    type: UPDATE_ANNOUNCEMENT,\n    message: message\n  };\n}\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3RhdGVzL2Fubm91bmNlbWVudC9hY3Rpb24udHN4P2EzOTEiXSwibmFtZXMiOlsiVVBEQVRFX0FOTk9VTkNFTUVOVCIsInR5cGUiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBTyxJQUFNQSxtQkFBbUIsR0FBekIsd0IsQ0FHUDtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7O0FBQ08scUNBQTZDO0FBRWxELFNBQU87QUFDSEMsUUFBSSxFQUREO0FBRUhDLFdBQU8sRUFBUEE7QUFGRyxHQUFQO0FBSUQiLCJmaWxlIjoiLi9zdGF0ZXMvYW5ub3VuY2VtZW50L2FjdGlvbi50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVVBEQVRFX0FOTk9VTkNFTUVOVCA9ICdbQW5ub3VuY2VtZW50XSB1cGRhdGUnXG5cblxuLy8gbGV0IHN0b3JlID0gY3JlYXRlU3RvcmUocXVvdGVzLCBpbml0aWFsU3RhdGUsIGFwcGx5TWlkZGxld2FyZShodHRwTWlkZGxld2FyZSkpO1xuXG5cblxuLy8gZXhwb3J0IGNvbnN0IHVwZGF0ZUFubm91bmNlbWVudCA9IGFzeW5jKG1lc3NhZ2U6IHN0cmluZykgPT4gKGRpc3BhdGNoKSA9PiB7XG4vLyAgIGNvbnNvbGUubG9nKCdtZXNzYWdlIDo+PiAnLCBtZXNzYWdlKTtcbi8vICAgcmV0dXJuIGRpc3BhdGNoKHsgdHlwZTogVVBEQVRFX0FOTk9VTkNFTUVOVCwgbWVzc2FnZSB9KVxuLy8gfVxuXG5cbi8vIEFjdGlvbiBDcmVhdG9yc1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUFubm91bmNlbWVudChtZXNzYWdlOiBzdHJpbmcpIHtcbiAgXG4gIHJldHVybiB7XG4gICAgICB0eXBlOiBVUERBVEVfQU5OT1VOQ0VNRU5ULFxuICAgICAgbWVzc2FnZVxuICB9O1xufVxuXG5cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./states/announcement/action.tsx\n");

/***/ })

})