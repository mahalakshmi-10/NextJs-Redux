{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trioangle/Documents/Nextjs-Redux/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import App, {Container} from 'next/app'\n// import React from 'react'\n// export default class MyApp extends App {\n//   static async getInitialProps ({ Component, ctx }) {\n//     let pageProps = {}\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     return {pageProps}\n//   }\n//   render () {\n//     const {Component, pageProps} = this.props\n//     return <Container>\n//       <Component {...pageProps} />\n//     </Container>\n//   }\n// }\n// import React from 'react'\n// import { Provider } from 'react-redux'\n// import App, { Container } from 'next/app'\n// import withRedux from 'next-redux-wrapper'\n// import { initStore } from '../store'\n// export default withRedux(initStore)(class MyApp extends App {\n//   static async getInitialProps ({Component, ctx}) {\n//     return {\n//       pageProps: (Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n//     }\n//   }\n//   render () {\n//     const {Component, pageProps, store} :any = this.props\n//     return <Container>\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     </Container>\n//   }\n// })\nimport React from 'react';\nimport { wrapper } from '../store';\n\nconst WrappedApp = ({\n  Component,\n  pageProps\n}) => /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 5\n}, this);\n\nexport default wrapper.withRedux(WrappedApp);","map":{"version":3,"sources":["/home/trioangle/Documents/Nextjs-Redux/pages/_app.tsx"],"names":["React","wrapper","WrappedApp","Component","pageProps","withRedux"],"mappings":";;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAwB,OAAxB;AAEA,SAAQC,OAAR,QAAsB,UAAtB;;AAEA,MAAMC,UAAwB,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,kBAE7B,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,QAFJ;;AAKA,eAAeH,OAAO,CAACI,SAAR,CAAkBH,UAAlB,CAAf","sourcesContent":["// import App, {Container} from 'next/app'\n// import React from 'react'\n\n// export default class MyApp extends App {\n//   static async getInitialProps ({ Component, ctx }) {\n//     let pageProps = {}\n\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n\n//     return {pageProps}\n//   }\n\n//   render () {\n//     const {Component, pageProps} = this.props\n//     return <Container>\n//       <Component {...pageProps} />\n//     </Container>\n//   }\n// }\n\n\n\n// import React from 'react'\n// import { Provider } from 'react-redux'\n// import App, { Container } from 'next/app'\n// import withRedux from 'next-redux-wrapper'\n// import { initStore } from '../store'\n\n// export default withRedux(initStore)(class MyApp extends App {\n//   static async getInitialProps ({Component, ctx}) {\n//     return {\n//       pageProps: (Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n//     }\n//   }\n\n//   render () {\n//     const {Component, pageProps, store} :any = this.props\n//     return <Container>\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     </Container>\n//   }\n// })\n\n\nimport React, {FC} from 'react';\nimport {AppProps} from 'next/app';\nimport {wrapper} from '../store';\n\nconst WrappedApp: FC<AppProps> = ({Component, pageProps}) => (\n  \n    <Component {...pageProps} />\n);\n\nexport default wrapper.withRedux(WrappedApp);"]},"metadata":{},"sourceType":"module"}