{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trioangle/Documents/Nextjs-Redux/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import App, {Container} from 'next/app'\n// import React from 'react'\n// export default class MyApp extends App {\n//   static async getInitialProps ({ Component, ctx }) {\n//     let pageProps = {}\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     return {pageProps}\n//   }\n//   render () {\n//     const {Component, pageProps} = this.props\n//     return <Container>\n//       <Component {...pageProps} />\n//     </Container>\n//   }\n// }\n// import React from 'react'\n// import { Provider } from 'react-redux'\n// import App, { Container } from 'next/app'\n// import withRedux from 'next-redux-wrapper'\n// import { initStore } from '../store'\nexport default withRedux(initStore)(class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    return {\n      pageProps: Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n}); // import React, {FC} from 'react';\n// import {AppProps} from 'next/app';\n// import {wrapper} from '../store';\n// const WrappedApp: FC<AppProps> = ({Component, pageProps}) => (\n//     <Component {...pageProps} />\n// );\n// export default wrapper.withRedux(WrappedApp);","map":{"version":3,"sources":["/home/trioangle/Documents/Nextjs-Redux/pages/_app.tsx"],"names":["withRedux","initStore","MyApp","App","getInitialProps","Component","ctx","pageProps","render","store","props"],"mappings":";;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA,eAAeA,SAAS,CAACC,SAAD,CAAT,CAAqB,MAAMC,KAAN,SAAoBC,GAApB,CAAwB;AAC1D,eAAaC,eAAb,CAA8B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA9B,EAAgD;AAC9C,WAAO;AACLC,MAAAA,SAAS,EAAGF,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE;AAD1E,KAAP;AAGD;;AAEDE,EAAAA,MAAM,GAAI;AACR,UAAM;AAACH,MAAAA,SAAD;AAAYE,MAAAA,SAAZ;AAAuBE,MAAAA;AAAvB,QAAqC,KAAKC,KAAhD;AACA,wBAAO,QAAC,SAAD;AAAA,6BACL,QAAC,QAAD;AAAU,QAAA,KAAK,EAAED,KAAjB;AAAA,+BACE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAKD;;AAdyD,CAA7C,CAAf,C,CAkBA;AACA;AACA;AAEA;AAEA;AACA;AAEA","sourcesContent":["// import App, {Container} from 'next/app'\n// import React from 'react'\n\n// export default class MyApp extends App {\n//   static async getInitialProps ({ Component, ctx }) {\n//     let pageProps = {}\n\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n\n//     return {pageProps}\n//   }\n\n//   render () {\n//     const {Component, pageProps} = this.props\n//     return <Container>\n//       <Component {...pageProps} />\n//     </Container>\n//   }\n// }\n\n\n\n// import React from 'react'\n// import { Provider } from 'react-redux'\n// import App, { Container } from 'next/app'\n// import withRedux from 'next-redux-wrapper'\n// import { initStore } from '../store'\n\n\n\nexport default withRedux(initStore)(class MyApp extends App {\n  static async getInitialProps ({Component, ctx}) {\n    return {\n      pageProps: (Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n    }\n  }\n\n  render () {\n    const {Component, pageProps, store} :any = this.props\n    return <Container>\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    </Container>\n  }\n})\n\n\n// import React, {FC} from 'react';\n// import {AppProps} from 'next/app';\n// import {wrapper} from '../store';\n\n// const WrappedApp: FC<AppProps> = ({Component, pageProps}) => (\n  \n//     <Component {...pageProps} />\n// );\n\n// export default wrapper.withRedux(WrappedApp);"]},"metadata":{},"sourceType":"module"}