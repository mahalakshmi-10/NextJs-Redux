{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trioangle/Documents/Nextjs-Redux/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import App, {Container} from 'next/app'\n// import React from 'react'\n// export default class MyApp extends App {\n//   static async getInitialProps ({ Component, ctx }) {\n//     let pageProps = {}\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     return {pageProps}\n//   }\n//   render () {\n//     const {Component, pageProps} = this.props\n//     return <Container>\n//       <Component {...pageProps} />\n//     </Container>\n//   }\n// }\n// import React from 'react'\n// import { Provider } from 'react-redux'\n// import App, { Container } from 'next/app'\n// import withRedux from 'next-redux-wrapper'\n// import { initStore } from '../store'\n// export default withRedux(initStore)(class MyApp extends App {\n//   static async getInitialProps ({Component, ctx}) {\n//     return {\n//       pageProps: (Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n//     }\n//   }\n//   render () {\n//     const {Component, pageProps, store} :any = this.props\n//     return <Container>\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     </Container>\n//   }\n// })\n// pages/_app.js\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App, { Container } from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\n\nconst reducer = (state = {\n  foo: ''\n}, action) => {\n  switch (action.type) {\n    case 'FOO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        foo: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\n\nconst makeStore = initialState => {\n  return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({\n      type: 'FOO',\n      payload: 'foo'\n    });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/home/trioangle/Documents/Nextjs-Redux/pages/_app.tsx"],"names":["React","createStore","Provider","App","Container","withRedux","reducer","state","foo","action","type","payload","makeStore","initialState","MyApp","getInitialProps","Component","ctx","store","dispatch","pageProps","render","props"],"mappings":";;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,GAAG,EAAE;AAAN,CAAT,EAAoBC,MAApB,KAA+B;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,6CAAWH,KAAX;AAAkBC,QAAAA,GAAG,EAAEC,MAAM,CAACE;AAA9B;;AACJ;AACI,aAAOJ,KAAP;AAJR;AAMH,CAPD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMK,SAAS,GAAIC,YAAD,IAAkB;AAChC,SAAOZ,WAAW,CAACK,OAAD,EAAUO,YAAV,CAAlB;AACH,CAFD;;AAIA,MAAMC,KAAN,SAAoBX,GAApB,CAAwB;AAEpB,eAAaY,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA7B,EAA+C;AAE3C;AACAA,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAACT,MAAAA,IAAI,EAAE,KAAP;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KAAnB;AAEA,UAAMS,SAAS,GAAGJ,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF;AAEA,WAAO;AAACG,MAAAA;AAAD,KAAP;AAEH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA,SAAD;AAAYI,MAAAA,SAAZ;AAAuBF,MAAAA;AAAvB,QAAqC,KAAKI,KAAhD;AACA,wBACI,QAAC,SAAD;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEJ,KAAjB;AAAA,+BACI,QAAC,SAAD,oBAAeE,SAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAtBmB;;AA0BxB,eAAef,SAAS,CAACO,SAAD,CAAT,CAAqBE,KAArB,CAAf","sourcesContent":["// import App, {Container} from 'next/app'\n// import React from 'react'\n\n// export default class MyApp extends App {\n//   static async getInitialProps ({ Component, ctx }) {\n//     let pageProps = {}\n\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n\n//     return {pageProps}\n//   }\n\n//   render () {\n//     const {Component, pageProps} = this.props\n//     return <Container>\n//       <Component {...pageProps} />\n//     </Container>\n//   }\n// }\n\n\n\n// import React from 'react'\n// import { Provider } from 'react-redux'\n// import App, { Container } from 'next/app'\n// import withRedux from 'next-redux-wrapper'\n// import { initStore } from '../store'\n\n// export default withRedux(initStore)(class MyApp extends App {\n//   static async getInitialProps ({Component, ctx}) {\n//     return {\n//       pageProps: (Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n//     }\n//   }\n\n//   render () {\n//     const {Component, pageProps, store} :any = this.props\n//     return <Container>\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     </Container>\n//   }\n// })\n\n\n\n// pages/_app.js\nimport React from \"react\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport App, {Container} from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\n\nconst reducer = (state = {foo: ''}, action) => {\n    switch (action.type) {\n        case 'FOO':\n            return {...state, foo: action.payload};\n        default:\n            return state\n    }\n};\n\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\nconst makeStore = (initialState) => {\n    return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n\n    static async getInitialProps({Component, ctx}) {\n\n        // we can dispatch from here too\n        ctx.store.dispatch({type: 'FOO', payload: 'foo'});\n\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        return {pageProps};\n\n    }\n\n    render() {\n        const {Component, pageProps, store} :any = this.props;\n        return (\n            <Container>\n                <Provider store={store}>\n                    <Component {...pageProps} />\n                </Provider>\n            </Container>\n        );\n    }\n\n}\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}