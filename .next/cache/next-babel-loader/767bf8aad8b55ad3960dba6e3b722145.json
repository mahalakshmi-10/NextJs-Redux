{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trioangle/Documents/Nextjs-Redux/pages/index.tsx\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateAnnouncement } from '../states/announcement/action';\n\nvar IndexPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(IndexPage, _React$Component);\n\n  var _super = _createSuper(IndexPage);\n\n  function IndexPage() {\n    _classCallCheck(this, IndexPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IndexPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          announcementMessage = _this$props.announcementMessage,\n          updateAnnouncement = _this$props.updateAnnouncement;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Announcement: \", announcementMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return updateAnnouncement('We are closed today!');\n          },\n          children: \"Close!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return IndexPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    announcementMessage: state.message\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateAnnouncement: bindActionCreators(updateAnnouncement, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/home/trioangle/Documents/Nextjs-Redux/pages/index.tsx"],"names":["IndexPage","React","Component","announcementMessage","updateAnnouncement","mapStateToProps","state","message","mapDispatchToProps","bindActionCreators","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,OAAA,QAAA,aAAA;AACA,SAAA,kBAAA,QAAA,OAAA;AACA,SAAA,kBAAA,QAAA,+BAAA;;IASMA,S;;;;;;;;;;;;;6BACK;AAAA,UAAA,WAAA,GAC6C,KAD7C,KAAA;AAAA,UACCG,mBADD,GAAA,WAAA,CAAA,mBAAA;AAAA,UACsBC,kBADtB,GAAA,WAAA,CAAA,kBAAA;AAEP,aAAA,aACE,OAAA,CAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,CAAA,gBAAA,EAAA,mBAAA,EAAA,aAEE,OAAA,CAAA,QAAA,EAAA;AAAQ,UAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,mBAAMA,kBAAkB,CAAxB,sBAAwB,CAAxB;AAAjB,WAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA,SAAA,EAFF,IAEE,CAFF;AAAA,OAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EADF,IACE,CADF;AAMD;;;;EATqBH,KAAK,CAACC,S;;AAY9B,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAAA;AAAA,SAAY;AAClCF,IAAAA,mBAAmB,EAAEG,KAAK,CAACC;AADO,GAAZ;AAAxB,CAAA;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,QAAA,EAAA;AAAA,SAAe;AACxCJ,IAAAA,kBAAkB,EAAEK,kBAAkB,CAAA,kBAAA,EAAA,QAAA;AADE,GAAf;AAA3B,CAAA;;AAIA,eAAeC,OAAO,CAAA,eAAA,EAAPA,kBAAO,CAAPA,CAAf,SAAeA,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { updateAnnouncement } from '../states/announcement/action'\n\ninterface IProps {\n  announcementMessage: string\n  updateAnnouncement: any\n}\n\ninterface IState {}\n\nclass IndexPage extends React.Component<IProps, IState> {\n  render() {\n    const { announcementMessage, updateAnnouncement } = this.props\n    return (\n      <div>\n        Announcement: {announcementMessage}\n        <button onClick={() => updateAnnouncement('We are closed today!')}>Close!</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  announcementMessage: state.message,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateAnnouncement: bindActionCreators(updateAnnouncement, dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage)"]},"metadata":{},"sourceType":"module"}