{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trioangle/Documents/Nextjs-Redux/pages/_app.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import App, {Container} from 'next/app'\n// import React from 'react'\n// export default class MyApp extends App {\n//   static async getInitialProps ({ Component, ctx }) {\n//     let pageProps = {}\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     return {pageProps}\n//   }\n//   render () {\n//     const {Component, pageProps} = this.props\n//     return <Container>\n//       <Component {...pageProps} />\n//     </Container>\n//   }\n// }\n// import React from 'react'\n// import { Provider } from 'react-redux'\n// import App, { Container } from 'next/app'\n// import withRedux from 'next-redux-wrapper'\n// import { initStore } from '../store'\n// export default withRedux(initStore)(class MyApp extends App {\n//   static async getInitialProps ({Component, ctx}) {\n//     return {\n//       pageProps: (Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n//     }\n//   }\n//   render () {\n//     const {Component, pageProps, store} :any = this.props\n//     return <Container>\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     </Container>\n//   }\n// })\n// pages/_app.js\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App, { Container } from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    foo: ''\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FOO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        foo: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\n\nvar makeStore = function makeStore(initialState) {\n  return createStore(reducer, initialState);\n};\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Provider, {\n          store: store,\n          children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                // we can dispatch from here too\n                ctx.store.dispatch({\n                  type: 'FOO',\n                  payload: 'foo'\n                });\n\n                if (!Component.getInitialProps) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                _context.t0 = _context.sent;\n                _context.next = 9;\n                break;\n\n              case 8:\n                _context.t0 = {};\n\n              case 9:\n                pageProps = _context.t0;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/home/trioangle/Documents/Nextjs-Redux/pages/_app.tsx"],"names":["React","createStore","Provider","App","Container","withRedux","reducer","state","foo","action","type","payload","makeStore","initialState","MyApp","props","Component","pageProps","store","ctx","dispatch","getInitialProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAAsB;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,6CAAWH,KAAX;AAAkBC,QAAAA,GAAG,EAAEC,MAAM,CAACE;AAA9B;;AACJ;AACI,aAAOJ,KAAP;AAJR;AAMH,CAPD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAkB;AAChC,SAAOZ,WAAW,CAACK,OAAD,EAAUO,YAAV,CAAlB;AACH,CAFD;;IAIMC,K;;;;;;;;;;;;;6BAaO;AAAA,wBACsC,KAAKC,KAD3C;AAAA,UACEC,SADF,eACEA,SADF;AAAA,UACaC,SADb,eACaA,SADb;AAAA,UACwBC,KADxB,eACwBA,KADxB;AAEL,0BACI,QAAC,SAAD;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,KAAjB;AAAA,iCACI,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;;;;;;;;;;AApB6BD,gBAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AAErC;AACAA,gBAAAA,GAAG,CAACD,KAAJ,CAAUE,QAAV,CAAmB;AAACV,kBAAAA,IAAI,EAAE,KAAP;AAAcC,kBAAAA,OAAO,EAAE;AAAvB,iBAAnB;;qBAEkBK,SAAS,CAACK,e;;;;;;uBAAwBL,SAAS,CAACK,eAAV,CAA0BF,GAA1B,C;;;;;;;;8BAAiC,E;;;AAA/EF,gBAAAA,S;iDAEC;AAACA,kBAAAA,SAAS,EAATA;AAAD,iB;;;;;;;;;;;;;;;;;;;EATKd,G;;AA0BpB,eAAeE,SAAS,CAACO,SAAD,CAAT,CAAqBE,KAArB,CAAf","sourcesContent":["// import App, {Container} from 'next/app'\n// import React from 'react'\n\n// export default class MyApp extends App {\n//   static async getInitialProps ({ Component, ctx }) {\n//     let pageProps = {}\n\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n\n//     return {pageProps}\n//   }\n\n//   render () {\n//     const {Component, pageProps} = this.props\n//     return <Container>\n//       <Component {...pageProps} />\n//     </Container>\n//   }\n// }\n\n\n\n// import React from 'react'\n// import { Provider } from 'react-redux'\n// import App, { Container } from 'next/app'\n// import withRedux from 'next-redux-wrapper'\n// import { initStore } from '../store'\n\n// export default withRedux(initStore)(class MyApp extends App {\n//   static async getInitialProps ({Component, ctx}) {\n//     return {\n//       pageProps: (Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n//     }\n//   }\n\n//   render () {\n//     const {Component, pageProps, store} :any = this.props\n//     return <Container>\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     </Container>\n//   }\n// })\n\n\n\n// pages/_app.js\nimport React from \"react\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport App, {Container} from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\n\nconst reducer = (state = {foo: ''}, action) => {\n    switch (action.type) {\n        case 'FOO':\n            return {...state, foo: action.payload};\n        default:\n            return state\n    }\n};\n\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\nconst makeStore = (initialState) => {\n    return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n\n    static async getInitialProps({Component, ctx}) {\n\n        // we can dispatch from here too\n        ctx.store.dispatch({type: 'FOO', payload: 'foo'});\n\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        return {pageProps};\n\n    }\n\n    render() {\n        const {Component, pageProps, store} :any = this.props;\n        return (\n            <Container>\n                <Provider store={store}>\n                    <Component {...pageProps} />\n                </Provider>\n            </Container>\n        );\n    }\n\n}\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}